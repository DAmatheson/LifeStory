$(function(){$("#successDialog").popup();$("#errorDialog").popup();$("#confirmDialog").popup();$(document).on("tap",function(){$(".ui-btn-active:not(.ui-state-persist)").removeClass("ui-btn-active ui-focus")});$.mobile.defaultPageTransition="none"});$("#home").one("pageinit",function(){$(this).on("pagebeforeshow",function(){lifeStory.ui.populateCharacterList("characterList","li")});lifeStory.values.showDeceased||$("#showDeceased").prop("checked",!1).change().checkboxradio("refresh");$("#showDeceased").change(lifeStory.ui.filterCharacterList)});$("#eventLog").one("pageinit",function(){$(this).on("pagebeforeshow",function(){lifeStory.ui.populateEventLog("eventList","li")})});$("#characterDetails").one("pageinit",function(){$(this).on("pagebeforeshow",lifeStory.ui.populateCharacterDetail);$("#deleteCharacter").on("tap",function(){lifeStory.ui.confirmDeleteCharacter()})});$("#eventDetails").one("pageinit",function(){$(this).on("pagebeforeshow",lifeStory.ui.populateEventDetail);$("#deleteEvent").on("tap",lifeStory.ui.confirmDeleteEvent)});$("#createCharacter").one("pageinit",function(){$(this).on("pagebeforeshow",function(){lifeStory.ui.populateRaceAndClassList("raceSelect","classSelect")});$("#createAddClass, #createAddRace").on("tap",function(){lifeStory.values.goBackToPageId="#createCharacter"});lifeStory.validation.handleCharacterForm("createCharacterForm",!0)});$("#addClass").one("pageinit",function(){lifeStory.validation.handleClassForm("addClassForm")});$("#addRace").one("pageinit",function(){lifeStory.validation.handleRaceForm("addRaceForm")});$("#editCharacter").one("pageinit",function(){lifeStory.validation.handleCharacterForm("editCharacterForm");$(this).on("pagebeforeshow",function(){lifeStory.ui.populateRaceAndClassList("editCharacterRaceSelect","editCharacterClassSelect");lifeStory.ui.populateCharacterEdit()});$("#editAddClass, #editAddRace").on("tap",function(){lifeStory.values.goBackToPageId="#editCharacter"})});$("#createEvent").one("pageinit",function(){lifeStory.validation.handleEventForm("createEventForm",!0);$("#removeEnemy").closest(".ui-btn").hide();$(this).on("pagebeforeshow",function(){lifeStory.ui.populateCreateEventAutocomplete()});$("#createEventForm").on("reset",function(){lifeStory.ui.showCombatDetailInputs()});$("#eventType").on("change",function(){lifeStory.util.isCombatEvent()?lifeStory.ui.showCombatDetailInputs():lifeStory.ui.showEventDetailInputs()});var n="#removeEnemy";$("#addEnemy").on("tap",function(){lifeStory.ui.duplicateInputSet("#combatDetailInputs fieldset:last","enemyInputsTemplate",n)});$("#removeEnemy").on("tap",function(){lifeStory.ui.removeInputSet("#combatDetailInputs fieldset:last:not(#enemyInputsTemplate)",n)});$("#createEventForm").on("reset",function(){lifeStory.ui.removeInputSet("#combatDetailInputs fieldset:not(#enemyInputsTemplate)",n)})});$("#editEvent").one("pageinit",function(){lifeStory.validation.handleEventForm("editEventForm");lifeStory.validation.handleOtherEventForm("editResurrectEventForm",!0);lifeStory.validation.handleOtherEventForm("editDeathEventForm");var n="#editRemoveEnemy",t="#editCombatDetailInputs fieldset:not(#editEnemyInputsTemplate)",i="#editCombatDetailInputs fieldset:last",r="editEnemyInputsTemplate";$(this).on("pagebeforeshow",function(){lifeStory.ui.removeInputSet(t,n);lifeStory.ui.populateEventEdit(i,r,n)});$("#editAddEnemy").on("tap",function(){lifeStory.ui.duplicateInputSet(i,r,n)});$("#editRemoveEnemy").on("tap",function(){lifeStory.ui.removeInputSet("#editCombatDetailInputs fieldset:last:not(#editEnemyInputsTemplate)",n)});$("#editEventForm").on("reset",function(){lifeStory.ui.removeInputSet(t,n)})});$("#resurrectEvent").one("pageinit",function(){lifeStory.validation.handleOtherEventForm("resurrectEventForm",!0,!0);$(this).on("pagebeforeshow",function(){lifeStory.ui.populateResurrectAutocomplete();$("#resurrectEventForm span[data-property=characterName]").text(lifeStory.values.characterName)})});$("#deathEvent").one("pageinit",function(){lifeStory.validation.handleOtherEventForm("deathEventForm",!1,!0);$(this).on("pagebeforeshow",lifeStory.ui.populateDeathAutocomplete)});$("#customize").one("pageinit",function(){lifeStory.validation.handleRaceForm("createRaceForm",!0);lifeStory.validation.handleClassForm("createClassForm",!0);$(this).on("pagebeforeshow",function(){lifeStory.ui.populateRaceAndClassList("deleteRaceSelect","deleteClassSelect",!0)});$("#deleteRace").on("tap",function(){lifeStory.dataAccess.deleteRace($("#deleteRaceSelect").val())});$("#deleteClass").on("tap",function(){lifeStory.dataAccess.deleteClass($("#deleteClassSelect").val())})});$("#settings").one("pageinit",function(){$("#clearCharacters").on("tap",lifeStory.ui.confirmClearCharacterData);$("#resetDatabase").on("tap",lifeStory.ui.confirmClearDatabase)});(function(n,t){"use strict";var i={get COMBAT_EVENT(){return 1},get NON_COMBAT_EVENT(){return 2},get RESURRECT_EVENT(){return 3},get DEATH_EVENT(){return 4},get ALIVE(){return 1},get DEAD(){return 0},get LEVEL_VALUES(){return[0,300,900,2700,6500,14e3,23e3,34e3,48e3,64e3,85e3,1e5,12e4,14e4,165e3,195e3,225e3,265e3,305e3,355e3]}};i.values={get characterId(){return parseInt(localStorage.getItem("characterId"),10)},set characterId(n){n!==t&&n!==null?localStorage.setItem("characterId",n):n===null&&localStorage.removeItem("characterId")},get characterName(){return localStorage.getItem("characterName")},set characterName(n){n!==t&&n!==null?localStorage.setItem("characterName",n):n===null&&localStorage.removeItem("characterName")},get characterAlive(){return parseInt(localStorage.getItem("characterAlive"),10)},set characterAlive(n){n!==t&&n!==null?localStorage.setItem("characterAlive",n):n===null&&localStorage.removeItem("characterAlive")},get eventId(){return parseInt(localStorage.getItem("eventId"),10)},set eventId(n){n!==t&&n!==null?localStorage.setItem("eventId",n):n===null&&localStorage.removeItem("eventId")},get showDeceased(){return localStorage.getItem("showDeceased")==="true"},set showDeceased(n){n!==t&&n!==null?localStorage.setItem("showDeceased",n):n===null&&localStorage.removeItem("showDeceased")},get goBackToPageId(){var n=localStorage.getItem("goBackToPageId");return localStorage.removeItem("goBackToPageId"),n},set goBackToPageId(n){localStorage.setItem("goBackToPageId",n)}};n.lifeStory=i})(window),function(n,t){"use strict";if(n===t||n===null)throw"lifeStory is required by dataClasses but is undefined.";n.Race=function(n){this.id=null;this.name=n||null};n.CharacterClass=function(n){this.id=null;this.name=n||null};n.Character=function(n,t,i,r,u){this.id=null;this.raceId=parseInt(t,10)||null;this.classId=parseInt(i,10)||null;this.name=n||null;this.living=parseInt(u,10)||null;this.details=r||null;this.raceName=null;this.className=null;this.experience=null};n.EventType=function(n){this.id=null;this.name=n||null};n.EventDetail=function(n,t,i,r){this.id=n||null;this.eventId=parseInt(r,10)||null;this.name=t||null;this.creatureCount=parseInt(i,10)||null};n.Event=function(n,t,i,r,u){this.id=null;this.eventTypeId=parseInt(n,10)||null;this.characterCount=parseInt(t,10)||null;this.experience=parseInt(i,10)||null;this.description=r||null;this.date=u||null;this.eventTypeName=null;this.eventDetails=null};n.SelectEntry=function(n,t){this.key=n;this.value=t};n.CallbackData=function(n,t,i,r){this.formIdToReset=n||null;this.redirectToPageId=t||null;this.successMessage=i||"";this.failureMessage=r||""}}(window.lifeStory),function(n,t,i){"use strict";function u(n,t){alert("SQL Error: "+t.message);console.error(t.message,t,n)}function f(n){return function(t){return n?n(t):(alert("SQL Transaction Error: "+t.message),console.error(t.message,t)),!0}}function a(n){n.executeSql("CREATE TABLE IF NOT EXISTS race (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(20) NOT NULL UNIQUE);")}function v(n){n.executeSql("CREATE TABLE IF NOT EXISTS class (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(20) NOT NULL UNIQUE);")}function o(n){n.executeSql("CREATE TABLE IF NOT EXISTS character (id INTEGER PRIMARY KEY AUTOINCREMENT, race_id INTEGER, class_id INTEGER, name VARCHAR(50) NOT NULL, living BOOLEAN NOT NULL DEFAULT 1,details TEXT, FOREIGN KEY (race_id) REFERENCES race (id),FOREIGN KEY (class_id) REFERENCES class (id));")}function y(n){n.executeSql("CREATE TABLE IF NOT EXISTS eventType (id INTEGER PRIMARY KEY, name VARCHAR(20) NOT NULL UNIQUE);")}function s(n){n.executeSql("CREATE TABLE IF NOT EXISTS event (id INTEGER PRIMARY KEY AUTOINCREMENT,eventType_id INTEGER NOT NULL, characterCount INTEGER, date DATE NOT NULL DEFAULT CURRENT_DATE, xp INTEGER, description TEXT,FOREIGN KEY (eventType_id) REFERENCES eventType (id));")}function h(n){n.executeSql("CREATE TABLE IF NOT EXISTS eventDetail (id INTEGER NOT NULL, event_id INTEGER NOT NULL, name VARCHAR(30) NOT NULL, creatureCount INTEGER, PRIMARY KEY (id, event_id), FOREIGN KEY (event_id) REFERENCES event (id));")}function c(n){n.executeSql("CREATE TABLE IF NOT EXISTS characterEvent (character_id INTEGER NOT NULL, event_id INTEGER NOT NULL,PRIMARY KEY (character_id, event_id),FOREIGN KEY (event_id) REFERENCES event (id),FOREIGN KEY (character_id) REFERENCES character (id));")}function p(n){["Barbarian","Bard","Cleric","Druid","Fighter","Monk","Paladin","Ranger","Rogue","Sorcerer","Warlock","Wizard"].forEach(function(t){n.executeSql("INSERT OR IGNORE INTO class (name) VALUES (?);",[t])})}function w(n){["Dwarf","Human","Halfling","Elf","Half-elf","Half-orc","Gnome","Dragonborn","Tiefling"].forEach(function(t){n.executeSql("INSERT OR IGNORE INTO race (name) VALUES (?);",[t])})}function b(n){var i=[t.COMBAT_EVENT,t.NON_COMBAT_EVENT,t.RESURRECT_EVENT,t.DEATH_EVENT];["Combat","An Event","Resurrect","Death"].forEach(function(t,r){n.executeSql("INSERT OR IGNORE INTO eventType (id ,name) VALUES (?, ?);",[i[r],t])})}function l(n){n.transaction(function(n){a(n);v(n);o(n);y(n);s(n);h(n);c(n);p(n);w(n);b(n)},function(n){return localStorage.setItem("dbInitialized","false"),console.error(n.message,n),alert("Database Initialization error: "+n.message),!0},function(){localStorage.setItem("dbInitialized","true")})}function k(){n.openDatabase===i?(alert("WebSQL isn't supported in this browser."),e={readTransaction:function(){console.error("WebSQL isn't supported in this browser.")},transaction:function(){console.error("WebSQL isn't supported in this browser.")}}):(e=n.openDatabase("LifeStory","1.0","Life Story Database",5242880,l),localStorage.getItem("dbInitialized")!=="true"&&l(e))}if(t===i||t===null)throw"lifeStory is required by database but is undefined.";var r=t.db={},e;r.getDb=function(){return(e===i||localStorage.getItem("dbInitialized")!=="true")&&k(),e};r.addRace=function(n,i,f){if(!(n instanceof t.Race))throw"race parameter to addRace must be an instance of lifeStory.Race";r.getDb().transaction(function(t){t.executeSql("INSERT OR IGNORE INTO race (name) VALUES (?);",[n.name],i||null,f||u)})};r.addClass=function(n,i,f){if(!(n instanceof t.CharacterClass))throw"characterClass parameter to addClass must be an instance of lifeStory.CharacterClass";r.getDb().transaction(function(t){t.executeSql("INSERT OR IGNORE INTO class (name) VALUES (?);",[n.name],i||null,f||u)})};r.addCharacter=function(n,i,f){if(!(n instanceof t.Character))throw"character parameter to addCharacter must be an instance of lifeStory.Character";r.getDb().transaction(function(t){t.executeSql("INSERT INTO character (name, race_id, class_id, details, living) VALUES (?, ?, ?, ?, ?);",[n.name,n.raceId,n.classId,n.details,n.living],i||null,f||u)})};r.addEvent=function(n,i,u,e,o){if(n instanceof t.Event)if(Array.isArray(i)){if(i.length>0&&!(i[0]instanceof t.EventDetail))throw"The entries in the eventDetails argument for addEvent must be instances of lifeStory.EventDetail";}else throw"The eventDetails argument for addEvent must be an array";else throw"event parameter to addEvent must be an instance of lifestory.Event";var s=f(o);r.getDb().transaction(function(r){r.executeSql("INSERT INTO event (eventType_Id, characterCount, xp, description) VALUES (?, ?, ?, ?);",[n.eventTypeId,n.characterCount,n.experience,n.description],function(n,t){r.executeSql("INSERT INTO characterEvent (character_id, event_id) VALUES (?, ?);",[u,t.insertId]);i.forEach(function(n){r.executeSql("INSERT INTO eventDetail (id, event_id, name, creatureCount) VALUES (?, ?, ?, ?);",[n.id,t.insertId,n.name,n.creatureCount])})});(n.eventTypeId===t.DEATH_EVENT||n.eventTypeId===t.RESURRECT_EVENT)&&r.executeSql("UPDATE character SET living = ? WHERE id = ?;",[n.eventTypeId===t.RESURRECT_EVENT?t.ALIVE:t.DEAD,u])},s,e)};r.updateCharacter=function(n,i,f){if(!(n instanceof t.Character))throw"character parameter to updateCharacter must be an instance of lifeStory.Character";r.getDb().transaction(function(t){t.executeSql("UPDATE character SET name = ?, race_id = ?, class_id = ?, details = ?, living = ? WHERE id = ?;",[n.name,n.raceId,n.classId,n.details,n.living,n.id],i||null,f||u)})};r.updateEvent=function(n,i,u,e){if(n instanceof t.Event)if(Array.isArray(i)){if(i.length<=0)throw"The eventDetails argument for updateEvent must contain at least one item";else if(!(i[0]instanceof t.EventDetail))throw"The entries in the eventDetails argument for updateEvent must be instances of lifeStory.EventDetail";}else throw"The eventDetails argument for updateEvent must be an array";else throw"event parameter to updateEvent must be an instance of lifestory.Event";var o=f(e);r.getDb().transaction(function(t){t.executeSql("UPDATE event SET eventType_id = ?, characterCount = ?, xp = ?, description = ? WHERE id = ?;",[n.eventTypeId,n.characterCount,n.experience,n.description,n.id]);t.executeSql("DELETE FROM eventDetail WHERE event_id = ?;",[n.id]);i.forEach(function(i){t.executeSql("INSERT INTO eventDetail (id, event_id, name, creatureCount) VALUES (?, ?, ?, ?);",[i.id,n.id,i.name,i.creatureCount])})},o,u)};r.deleteRace=function(n,t,i){r.getDb().transaction(function(r){r.executeSql("DELETE FROM race WHERE id = ? AND NOT EXISTS (SELECT 1 FROM character WHERE race_id = ?);",[n,n],t||null,i||u)})};r.deleteClass=function(n,t,i){r.getDb().transaction(function(r){r.executeSql("DELETE FROM class WHERE id = ? AND NOT EXISTS (SELECT 1 FROM character WHERE class_id = ?);",[n,n],t||null,i||u)})};r.deleteCharacter=function(n,t,i){var u=f(i);r.getDb().transaction(function(t){t.executeSql("DELETE FROM eventDetail WHERE event_id IN ( SELECT ed.id FROM eventDetail ed JOIN event e ON ed.event_id = e.id JOIN characterEvent ce ON e.id = ce.event_id AND ce.character_id = ? );",[n]);t.executeSql("DELETE FROM event WHERE id IN ( SELECT e.id FROM event e JOIN characterEvent ce ON e.id = ce.event_id AND ce.character_id = ?);",[n]);t.executeSql("DELETE FROM characterEvent WHERE character_id = ?;",[n]);t.executeSql("DELETE FROM character WHERE id = ?;",[n])},u,t)};r.deleteEvent=function(n,i,u,e){var o=t.values.characterAlive,s=function(n){t.values.characterAlive=o;f(e)(n)};r.getDb().transaction(function(r){r.executeSql("DELETE FROM eventDetail WHERE event_id = ?;",[n]);r.executeSql("DELETE FROM event WHERE id = ?;",[n]);r.executeSql("DELETE FROM characterEvent WHERE event_id = ?;",[n]);r.executeSql("UPDATE character SET living = (SELECT CASE e.eventType_id WHEN ? THEN MAX(?) WHEN ? THEN ? ELSE ? END FROM event e JOIN characterEvent ce ON e.id = ce.event_id AND ce.character_id = ? WHERE eventType_id IN(?, ?) ORDER BY date DESC LIMIT 1) WHERE id = ?;",[t.RESURRECT_EVENT,t.ALIVE,t.DEATH_EVENT,t.DEAD,t.ALIVE,i,t.RESURRECT_EVENT,t.DEATH_EVENT,i]);r.executeSql("SELECT living FROM character WHERE id = ?;",[i],function(n,i){i.rows.length>0&&(t.values.characterAlive=i.rows.item(0).living)})},s,u)};r.getCharacterCount=function(n){r.getDb().readTransaction(function(t){t.executeSql("SELECT COUNT() AS count FROM character;",null,function(t,i){i.rows.length>0?n(i.rows.item(0).count):n(0)},u)})};r.getClasses=function(n){r.getDb().readTransaction(function(i){i.executeSql("SELECT * FROM class ORDER BY name;",null,function(i,r){t.util.convertToSelectEntrys(r,"name",n)},u)})};r.getRaces=function(n){r.getDb().readTransaction(function(i){i.executeSql("SELECT * FROM race ORDER BY name;",null,function(i,r){t.util.convertToSelectEntrys(r,"name",n)},u)})};r.getCharacters=function(n){r.getDb().readTransaction(function(i){i.executeSql("SELECT c.id, c.name, living, race.name AS raceName, class.name AS className FROM character c JOIN class ON c.class_id = class.id JOIN race ON c.race_id = race.id;",null,function(i,r){for(var f,u,o=[],e=0;e<r.rows.length;e++)f=r.rows.item(e),u=new t.Character,u.id=f.id,u.name=f.name,u.living=f.living,u.className=f.className,u.raceName=f.raceName,o[e]=u;n(o)},u)})};r.getCharacter=function(n,i){r.getDb().readTransaction(function(r){r.executeSql("SELECT c.id, race_id, class_id, c.name, living, details, race.name AS raceName, class.name AS className, SUM(e.xp / e.characterCount) AS experience FROM character c JOIN class ON c.class_id = class.id JOIN race ON c.race_id = race.id LEFT OUTER JOIN characterEvent ce ON c.id = ce.character_id LEFT OUTER JOIN event e ON ce.event_id = e.id WHERE c.id = ?;",[n],function(n,r){var f=r.rows.item(0),u=new t.Character;u.id=f.id;u.name=f.name;u.raceId=f.race_id;u.classId=f.class_id;u.living=f.living;u.details=f.details;u.raceName=f.raceName;u.className=f.className;u.experience=f.experience;i(u)},u)})};r.getCharactersEvents=function(n,i){var f=[],e=function(){i(f)};r.getDb().readTransaction(function(i){i.executeSql("SELECT e.id AS id, eventType_id, characterCount, date, xp, description, et.name AS eventTypeName FROM event e JOIN characterEvent ce ON e.id = ce.event_id JOIN eventType et ON e.eventType_id = et.id WHERE ce.character_id = ? ORDER BY date;",[n],function(n,r){for(var e,u,o=0;o<r.rows.length;o++)e=r.rows.item(o),u=new t.Event,u.id=e.id,u.eventTypeId=e.eventType_id,u.characterCount=e.characterCount,u.date=e.date,u.experience=e.xp,u.description=e.description,u.eventTypeName=e.eventTypeName,u.eventDetails=[],i.executeSql("SELECT name, creatureCount FROM eventDetail WHERE event_id = ? ORDER BY id;",[u.id],function(n,i,r){for(var e,f,u=0;u<r.rows.length;u++)e=r.rows.item(u),f=new t.EventDetail,f.name=e.name,f.creatureCount=e.creatureCount,n.eventDetails[u]=f}.bind(null,u)),f[o]=u},u)},null,e)};r.getEvent=function(n,i){var f=new t.Event,e=function(){i(f)};r.getDb().readTransaction(function(i){i.executeSql("SELECT e.id AS id, eventType_id, characterCount, date, xp, description, et.name AS eventTypeName FROM event e JOIN eventType et ON e.eventType_id = et.id WHERE e.id = ?;",[n],function(n,t){var i=t.rows.item(0);f.id=i.id;f.eventTypeId=i.eventType_id;f.characterCount=i.characterCount;f.date=i.date;f.experience=i.xp;f.description=i.description;f.eventTypeName=i.eventTypeName},u);i.executeSql("SELECT id, event_id, name, creatureCount FROM eventDetail WHERE event_id = ?;",[n],function(n,i){for(var u,r,o=[],e=0;e<i.rows.length;e++)u=i.rows.item(e),r=new t.EventDetail,r.eventId=u.event_id,r.id=u.id,r.name=u.name,r.creatureCount=u.creatureCount,o[e]=r;f.eventDetails=o},u)},null,e)};r.getEventTitles=function(n,t){var i="";n.forEach(function(){i+=(i===""?"":", ")+"?"});r.getDb().readTransaction(function(r){r.executeSql("SELECT DISTINCT name, eventType_id FROM eventDetail ed JOIN event e ON ed.event_id = e.id WHERE eventType_id IN ("+i+");",n,function(i,r){var o=[],u,f,e;for(n.forEach(function(n){o[n]=[]}),u=0;u<r.rows.length;u++)for(f=r.rows.item(u),e=0;e<n.length;e++)if(f.eventType_id===n[e]){o[f.eventType_id].push(f.name);break}t(o)},u)})};r.clearCharacterData=function(n,t){var i=f(t);r.getDb().transaction(function(n){n.executeSql("DROP TABLE IF EXISTS character;");n.executeSql("DROP TABLE IF EXISTS characterEvent;");n.executeSql("DROP TABLE IF EXISTS event;");n.executeSql("DROP TABLE IF EXISTS eventDetail;");o(n);s(n);h(n);c(n)},i,n)};r.dropAllTables=function(n,t){var i=function(n){localStorage.setItem("dbInitialized","true");f(t)(n)};r.getDb().transaction(function(n){n.executeSql("DROP TABLE IF EXISTS character;");n.executeSql("DROP TABLE IF EXISTS characterEvent;");n.executeSql("DROP TABLE IF EXISTS class;");n.executeSql("DROP TABLE IF EXISTS event;");n.executeSql("DROP TABLE IF EXISTS eventType;");n.executeSql("DROP TABLE IF EXISTS eventDetail;");n.executeSql("DROP TABLE IF EXISTS race;");localStorage.setItem("dbInitialized","false")},i,n)}}(window,window.lifeStory),function(n,t,i){"use strict";function u(n){return t(":input:not(button)",n)}if(n===i||n===null)throw"lifeStory is required by util but is undefined.";var r=n.util={};r.createEventFromInput=function(t){var i=u(t),f=parseInt(i.filter("[name=id]").val(),10)||null,e=i.filter("[name=eventType]").val(),o=i.filter("[name=characterCount]").val(),s=i.filter("[name=experience]").val(),h=i.filter("[name=description]").val(),r=new n.Event(e,o,s,h);return r.id=f,r};r.createEventDetailsFromInput=function(i,r){var o=t(i),f=[],s,h,e;return r===n.NON_COMBAT_EVENT||r===n.RESURRECT_EVENT||r===n.DEATH_EVENT?(s=o.find("[name=eventName]").val().trim(),h=null,f.push(new n.EventDetail(1,s,h))):(e=0,t("fieldset",o).each(function(){var t=u(this),o=e+1,i=t.filter("[name=enemyName]").val().trim(),r=t.filter("[name=creatureCount]").val()||null;i&&r&&(f.push(new n.EventDetail(o,i,r)),e++)})),f};r.createCharacterFromInput=function(t){var r=u(t),i=new n.Character;return i.id=r.filter("[name=id]").val()||null,i.name=r.filter("[name=name]").val().trim(),i.raceId=r.filter("[name=raceId]").val(),i.classId=r.filter("[name=classId]").val(),i.living=r.filter("[name=living]").val()||n.ALIVE,i.details=r.filter("[name=details]").val().trim()||null,i};r.createRaceFromInput=function(t){var i=u(t),r=i.filter("[name=raceName]").val().trim();return new n.Race(r)};r.createClassFromInput=function(t){var i=u(t),r=i.filter("[name=className]").val().trim();return new n.CharacterClass(r)};r.isCombatEvent=function(){var i=t("#eventType option:selected, #editEventForm input[name=eventType]",t.mobile.activePage).val();return parseInt(i,10)===n.COMBAT_EVENT};r.triggerReset=function(n){t("#"+n).trigger("reset")};r.redirectToPage=function(n){t.mobile.changePage("#"+n)};r.redirectOnSuccessDialogClose=function(n){t("#successBtn").off("tap").one("tap",function(t){t.stopImmediatePropagation();t.preventDefault();r.redirectToPage(n)})};r.convertToSelectEntrys=function(t,i,r){for(var f=[],u=0;u<t.rows.length;u++)f[u]=new n.SelectEntry(t.rows.item(u).id,t.rows.item(u)[i]);r(f)};r.getLevel=function(t){t=t||0;for(var i=1;i<n.LEVEL_VALUES.length-1;i++)if(t<n.LEVEL_VALUES[i])return i;return n.LEVEL_VALUES.length};r.experienceToNextLevel=function(t){var i=r.getLevel(t);return n.LEVEL_VALUES[i]-t}}(window.lifeStory,jQuery),function(n,t,i){"use strict";function u(n,r,u){t.ui.displayErrorMessage(n);u===i||u===null?console.error(r.message,r):console.error(u.message,u,r)}function f(n){n.formIdToReset&&t.util.triggerReset(n.formIdToReset);t.ui.displaySuccessMessage(n.successMessage);n.redirectToPageId&&t.util.redirectOnSuccessDialogClose(n.redirectToPageId)}function e(){t.ui.populateRaceList("deleteRaceSelect",t.ui.refreshDeleteRaceUIState)}function c(n){f(n);n.isCustomizePage&&e()}function l(n,i){i.rowsAffected>=1?(e(),t.ui.displaySuccessMessage("The race was deleted successfully.")):t.ui.displayErrorMessage("Sorry, you can't delete that race because it is in use by a character.")}function o(){t.ui.populateClassList("deleteClassSelect",t.ui.refreshDeleteClassUIState)}function a(n){f(n);n.isCustomizePage&&o()}function v(n,i){i.rowsAffected>=1?(o(),t.ui.displaySuccessMessage("The class was deleted successfully.")):t.ui.displayErrorMessage("Sorry, you can't delete that class because it is in use by a character.")}function y(n,i,r){t.values.characterId=r.insertId;f(n)}function p(n){t.values.characterId=null;t.values.characterName=null;t.values.characterAlive=null;f(n)}function w(n){t.values.eventId=null;f(n)}function b(n,i){t.values.characterAlive=i;f(n)}function s(n,i){var e=b.bind(null,n),o=u.bind(null,n.failureMessage),r=t.util.createEventFromInput(i),f;return r.eventTypeId=n.isResurrection?t.RESURRECT_EVENT:t.DEATH_EVENT,f=t.util.createEventDetailsFromInput(i,r.eventTypeId),r.experience=null,r.characterCount=1,{successCallback:e,failureCallback:o,event:r,eventDetails:f}}function h(n){t.values.characterId=null;t.values.characterAlive=null;t.values.characterName=null;t.values.eventId=null;t.ui.displaySuccessMessage(n)}if(t===i||t===null)throw"lifeStory is required by util but is undefined.";var r=t.dataAccess={};r.saveRaceToDb=function(n,i){n.isCustomizePage||(n.redirectToPageId=t.values.goBackToPageId);var r=c.bind(null,n),f=u.bind(null,n.failureMessage);t.db.addRace(t.util.createRaceFromInput(i),r,f)};r.deleteRace=function(n){var i=u.bind(null,"Failed to delete the race.");t.db.deleteRace(n,l,i)};r.saveClassToDb=function(n,i){n.isCustomizePage||(n.redirectToPageId=t.values.goBackToPageId);var r=a.bind(null,n),f=u.bind(null,n.failureMessage);t.db.addClass(t.util.createClassFromInput(i),r,f)};r.deleteClass=function(n){var i=u.bind(null,"Failed to delete the class.");t.db.deleteClass(n,v,i)};r.saveCharacterToDb=function(n,i){var f=y.bind(null,n),e=u.bind(null,n.failureMessage),r=t.util.createCharacterFromInput(i);t.values.characterName=r.name;t.values.characterAlive=r.living;t.db.addCharacter(r,f,e)};r.updateCharacterInDb=function(n,i){var e=f.bind(null,n),o=u.bind(null,n.failureMessage),r=t.util.createCharacterFromInput(i);t.values.characterName=r.name;t.values.characterAlive=r.living;t.db.updateCharacter(r,e,o)};r.deleteCharacter=function(n,i){var r=p.bind(null,i),f=u.bind(null,"Failed to delete the character.");t.db.deleteCharacter(n,r,f)};r.saveEventToDb=function(n,i){var e=f.bind(null,n),o=u.bind(null,n.failureMessage),r=t.util.createEventFromInput(i),s=t.util.createEventDetailsFromInput(i,r.eventTypeId),h=t.values.characterId;t.db.addEvent(r,s,h,e,o)};r.updateEventInDb=function(n,i){var e=f.bind(null,n),o=u.bind(null,n.failureMessage),r=t.util.createEventFromInput(i),s=t.util.createEventDetailsFromInput(i,r.eventTypeId);t.db.updateEvent(r,s,e,o)};r.deleteEvent=function(n,i){var r=w.bind(null,i),f=u.bind(null,"Failed to delete the event."),e=t.values.characterId;t.db.deleteEvent(n,e,r,f)};r.saveOtherEventToDb=function(n,i){var r=s(n,i),u=r.event.eventTypeId===t.RESURRECT_EVENT?t.ALIVE:t.DEAD,f=r.successCallback.bind(null,u),e=r.failureCallback,o=r.event,h=r.eventDetails,c=t.values.characterId;t.db.addEvent(o,h,c,f,e)};r.updateOtherEventInDb=function(n,i){var r=s(n,i),u=r.successCallback,f=r.failureCallback,e=r.event,o=r.eventDetails;t.db.updateEvent(e,o,u,f)};r.clearCharacterData=function(){var n=h.bind(null,"All characters deleted successfully."),i=u.bind(null,"Failed to delete all characters. All character data is still intact.");t.db.clearCharacterData(n,i)};r.clearDatabase=function(){var n=h.bind(null,"All data deleted successfully."),i=u.bind(null,"Failed to delete all data. All data is still intact.");t.db.dropAllTables(n,i)}}(window,window.lifeStory),function(n,t,i){"use strict";function u(t){n.values.characterId=t.data.id;n.values.characterName=t.data.name;n.values.characterAlive=t.data.alive}function f(t){n.values.eventId=t.data.eventId}function e(i){var r=[];r=i===n.DEATH_EVENT?[i,n.COMBAT_EVENT]:[i];n.db.getEventTitles(r,function(r){i===n.NON_COMBAT_EVENT?t("#editEventName").autocomplete({source:r[n.NON_COMBAT_EVENT]}):i===n.RESURRECT_EVENT?t("#editCauseOfResurrect").autocomplete({source:r[n.RESURRECT_EVENT]}):i===n.DEATH_EVENT&&t("#editCauseOfDeath").autocomplete({source:r[n.DEATH_EVENT].concat(r[n.COMBAT_EVENT])})})}function o(){var t=new n.CallbackData;t.successMessage="The character was deleted successfully.";t.redirectToPageId="home";n.dataAccess.deleteCharacter(n.values.characterId,t)}function s(){var t=new n.CallbackData;t.successMessage="The event was deleted successfully.";t.redirectToPageId="eventLog";n.dataAccess.deleteEvent(n.values.eventId,t)}if(n===i||n===null)throw"lifeStory is required by ui but is undefined.";var r=n.ui={};r.displayConfirmation=function(n,i,r,u){if(t("#confirmTitle").text(n),t("#confirmMessage").text(i),t("#confirmDialog").popup("open"),r)t("#confirmAccept").one("tap",function(){setTimeout(r,50);t("#confirmDeny").off("tap")});if(u)t("#confirmDeny").one("tap",function(){setTimeout(u,50);t("#confirmAccept").off("tap")})};r.displaySuccessMessage=function(n){t("#successMessage").text(n);t("#successDialog").popup("open")};r.displayErrorMessage=function(n){t("#errorMessage").text(n);t("#errorDialog").popup("open")};r.filterCharacterList=function(){n.values.showDeceased=this.checked;var i=!this.checked;t("#characterList li[data-theme=f]").toggleClass("ui-screen-hidden",i)};r.refreshDeleteRaceUIState=function(){t("#deleteRaceSelect option:first").is(":disabled")?(t("#deleteRace").button("disable"),t("#deleteRaceSelect").selectmenu("disable")):(t("#deleteRace").button("enable"),t("#deleteRaceSelect").selectmenu("enable"))};r.refreshDeleteClassUIState=function(){t("#deleteClassSelect option:first").is(":disabled")?(t("#deleteClass").button("disable"),t("#deleteClassSelect").selectmenu("disable")):(t("#deleteClass").button("enable"),t("#deleteClassSelect").selectmenu("enable"))};r.showCombatDetailInputs=function(n){n?(t("#editEventDetailInputs").hide(),t("#editCombatDetailInputs").show()):(t("#eventDetailInputs").hide(),t("#combatDetailInputs").show())};r.showEventDetailInputs=function(n){n?(t("#editCombatDetailInputs").hide(),t("#editEventDetailInputs").show()):(t("#combatDetailInputs").hide(),t("#eventDetailInputs").show())};r.populateSelectList=function(i,r){var e,u,f;if(Array.isArray(r)){if(r.length>0&&!(r[0]instanceof n.SelectEntry))throw"The entries in the data argument for populateSelectList must be instances of lifeStory.SelectEntry";}else throw"The data argument for populateSelectList must be an array";for(t("#"+i).children().remove().end(),e=t("<option><\/option>"),u=0;u<r.length;u++)f=e.clone(),f.val(r[u].key).text(r[u].value),t("#"+i).append(f);r.length===0&&t("#"+i).append("<option disabled>-- No Races Created --<\/option>");t("#"+i).selectmenu("refresh")};r.populateClassList=function(t,i){n.db.getClasses(function(n){r.populateSelectList(t,n);typeof i=="function"&&i()})};r.populateRaceList=function(t,i){n.db.getRaces(function(n){r.populateSelectList(t,n);typeof i=="function"&&i()})};r.populateRaceAndClassList=function(n,t,u){r.populateRaceList(n,u?r.refreshDeleteRaceUIState:i);r.populateClassList(t,u?r.refreshDeleteClassUIState:i)};r.duplicateInputSet=function(n,i,r){t(n+":not(#"+i+")").length===0&&t(r).closest(".ui-btn").show();var u=t("#"+i+" input[name=enemyName]:first-child").autocomplete("option","source");t(n).after(t("#"+i).clone().removeAttr("id").find("label").remove().end().find("input").removeAttr("id").val("").end().find("input[name=enemyName]").autocomplete({source:u}).end())};r.removeInputSet=function(n,i){t(n).remove();t(n).length===0&&t(i).closest(".ui-btn").hide()};r.populateCharacterList=function(i,f){n.db.getCharacters(function(e){var h=t("#"+i),c=t(":first("+f+")",h).clone().removeClass("ui-screen-hidden"),l,s,o;for(t(":first("+f+")",h).siblings().remove(),l=0;l<e.length;l++){s=c.clone();o=e[l];t("[data-property=name]",s).text(o.name);t("[data-property=raceName]",s).text(o.raceName);t("[data-property=className]",s).text(o.className);o.living===n.DEAD&&s.attr("data-theme","f").removeClass("ui-btn-up-c").addClass("ui-btn-up-f");t("a",s).on("tap",{id:o.id,name:o.name,alive:o.living},u);h.append(s)}e.length===0&&(c.find("a").attr("href","#createCharacter").find("h1").text("Add a Character").siblings().remove(),c.find("span").removeClass("ui-icon-arrow-r").addClass("ui-icon-plus"),h.append(c));h.listview("refresh");r.filterCharacterList.call(t("#showDeceased")[0])})};r.populateEventLog=function(i,r){t("#eventLog h2[data-property=characterName]").text(n.values.characterName);n.db.getCharactersEvents(n.values.characterId,function(u){var h=t("#"+i),c=t(":first("+r+")",h).clone().removeClass("ui-screen-hidden"),l;for(t(":first("+r+")",h).siblings().remove(),l=0;l<u.length;l++){var o=c.clone(),e=u[l],s="";e.eventTypeId===n.COMBAT_EVENT?(s="Defeated: ",e.eventDetails.forEach(function(n){s+=n.creatureCount+" "+n.name+", "}),s=s.slice(0,-2)):s=e.eventTypeId===n.NON_COMBAT_EVENT?e.eventDetails[0].name:e.eventTypeId===n.RESURRECT_EVENT?"Resurrected by: "+e.eventDetails[0].name:e.eventTypeId===n.DEATH_EVENT?"Died to: "+e.eventDetails[0].name:e.eventTypeName;t("[data-property=title]",o).text(s);(e.eventTypeId===n.COMBAT_EVENT||e.eventTypeId===n.NON_COMBAT_EVENT)&&t("[data-property=experience]",o).text(Math.floor(e.experience/e.characterCount)+" XP");e.eventTypeId===n.DEATH_EVENT?o.attr("data-theme","f").removeClass("ui-btn-up-c").addClass("ui-btn-up-f"):e.eventTypeId===n.RESURRECT_EVENT&&o.attr("data-theme","g").removeClass("ui-btn-up-c").addClass("ui-btn-up-g");t("a",o).on("tap",{eventId:e.id},f);h.append(o)}u.length===0&&(c.find("a").attr("href","#createEvent").find("h1").text("Add a character event").siblings().remove(),c.find("span").removeClass("ui-icon-arrow-r").addClass("ui-icon-plus"),h.append(c));n.values.characterAlive===n.ALIVE?(t("#diedButton").removeClass("ui-screen-hidden"),t("#resurrectButton").addClass("ui-screen-hidden")):(t("#resurrectButton").removeClass("ui-screen-hidden"),t("#diedButton").addClass("ui-screen-hidden"));h.listview("refresh")})};r.populateEventDetail=function(){var i=n.values.characterName,r=n.values.eventId;t("#eventDetails h2[data-property=characterName]").text(i);n.db.getEvent(r,function(i){var r=t("#eventDetailsTable"),f="",u;switch(i.eventTypeId){case n.COMBAT_EVENT:f="Defeated:";break;case n.NON_COMBAT_EVENT:f="Event Title:";break;case n.RESURRECT_EVENT:f="Resurrected By:";break;case n.DEATH_EVENT:f="Killed By:"}r.find("[data-property=typeLabel").text(f);r.find("[data-property=eventType]").text(i.eventTypeName);r.find("[data-property=date]").text(i.date);u="";i.eventDetails.forEach(function(n){u+=(n.creatureCount||"")+" "+n.name+", "});u=u.substring(0,u.length-2).trim();r.find("[data-property=names]").text(u);i.eventTypeId===n.RESURRECT_EVENT||i.eventTypeId===n.DEATH_EVENT?(t("#experienceRow").addClass("ui-screen-hidden"),t("#characterCountRow").addClass("ui-screen-hidden")):(t("#experienceRow").removeClass("ui-screen-hidden"),t("#characterCountRow").removeClass("ui-screen-hidden"),r.find("[data-property=experience]").text(i.experience),r.find("[data-property=characterCount]").text(i.characterCount));i.description?(r.find("[data-property=description]").text(i.description),r.find("#descriptionLabelRow").removeClass("ui-screen-hidden")):(r.find("[data-property=description]").text(""),r.find("#descriptionLabelRow").addClass("ui-screen-hidden"))})};r.populateEventEdit=function(i,u,f){var o=n.values.eventId;n.db.getEvent(o,function(o){var h,s=o.eventTypeId;s!==n.COMBAT_EVENT&&e(s);s===n.COMBAT_EVENT?(r.showCombatDetailInputs(!0),n.db.getEventTitles([s],function(e){t("#editEnemyName").autocomplete({source:e[n.COMBAT_EVENT]});o.eventDetails.forEach(function(n,e){var s=t(i);s.find("[name=enemyName]").val(n.name);s.find("[name=creatureCount]").val(n.creatureCount);e+1<o.eventDetails.length&&r.duplicateInputSet(i,u,f)})})):s===n.NON_COMBAT_EVENT?r.showEventDetailInputs(!0):s===n.RESURRECT_EVENT?(t("#editEventForm, #editDeathEventForm").hide(),h=t("#editResurrectEventForm").show()):s===n.DEATH_EVENT&&(t("#editEventForm, #editResurrectEventForm").hide(),h=t("#editDeathEventForm").show());(s===n.COMBAT_EVENT||s===n.NON_COMBAT_EVENT)&&(t("#editResurrectEventForm, #editDeathEventForm").hide(),h=t("#editEventForm").show(),h.find("[name=experience]").val(o.experience),h.find("[name=characterCount]").val(o.characterCount));(s===n.NON_COMBAT_EVENT||s===n.RESURRECT_EVENT||s===n.DEATH_EVENT)&&h.find("[name=eventName]").val(o.eventDetails[0].name);h.find("[name=id]").val(o.id);h.find("[name=eventType]").val(s);h.find("[name=description]").val(o.description)})};r.populateCharacterDetail=function(){var i=n.values.characterId,r=n.values.characterName;t("#characterDetails h2[data-property=characterName]").text(r);n.db.getCharacter(i,function(i){var r=t("#characterDetailsTable"),u;r.find("[data-property=race]").text(i.raceName);r.find("[data-property=class]").text(i.className);u=n.util.getLevel(Math.floor(i.experience));r.find("[data-property=level]").text(u);r.find("[data-property=totalXP]").text(Math.floor(i.experience)+" XP");r.find("[data-property=nextLevel").text(u+1);r.find("[data-property=requiredXP]").text(n.util.experienceToNextLevel(i.experience)+" XP");r.find("[data-property=living]").text(i.living===n.ALIVE?"Alive":"Dead");i.details?(r.find("[data-property=details]").text(i.details),r.find("#detailsLabelRow").removeClass("ui-screen-hidden")):(r.find("[data-property=details]").text(""),r.find("#detailsLabelRow").addClass("ui-screen-hidden"))})};r.populateCharacterEdit=function(){n.db.getCharacter(n.values.characterId,function(n){var i=t("#editCharacterForm");i.find("[name=id]").val(n.id);i.find("[name=name]").val(n.name);i.find("[name=raceId]").val(n.raceId).selectmenu("refresh");i.find("[name=classId]").val(n.classId).selectmenu("refresh");i.find("[name=details]").val(n.details)})};r.populateCreateEventAutocomplete=function(){var i=[n.COMBAT_EVENT,n.NON_COMBAT_EVENT];n.db.getEventTitles(i,function(i){t("#enemyName").autocomplete({source:i[n.COMBAT_EVENT]});t("#eventName").autocomplete({source:i[n.NON_COMBAT_EVENT]})})};r.populateDeathAutocomplete=function(){n.db.getEventTitles([n.DEATH_EVENT,n.COMBAT_EVENT],function(i){t("#causeOfDeath").autocomplete({source:i[n.DEATH_EVENT].concat(i[n.COMBAT_EVENT])})})};r.populateResurrectAutocomplete=function(){n.db.getEventTitles([n.RESURRECT_EVENT],function(i){t("#causeOfResurrect").autocomplete({source:i[n.RESURRECT_EVENT]})})};r.confirmDeleteCharacter=function(){r.displayConfirmation("Delete "+n.values.characterName+"?","Are you sure you want to delete "+n.values.characterName+"?",o)};r.confirmDeleteEvent=function(){r.displayConfirmation("Delete Event?","Are you sure you want to delete this event?",s)};r.confirmClearCharacterData=function(){n.db.getCharacterCount(function(t){r.displayConfirmation("Delete Characters?","Are you sure you want to delete all ("+t+") characters permanently?",n.dataAccess.clearCharacterData)})};r.confirmClearDatabase=function(){n.db.getCharacterCount(function(t){r.displayConfirmation("Delete All Data?","Are you sure you want to delete all data? This will delete all ("+t+") characters, their events, and custom races and classes permanently.",n.dataAccess.clearDatabase)})}}(window.lifeStory,jQuery),function(n,t,i){"use strict";function r(n,i,r,u,f){f&&(i=i.bind(null,f));t("#"+n).validate({submitHandler:i,rules:r,messages:u})}if(n===i||n===null)throw"lifeStory is required by util but is undefined.";var u=n.validation={},f={required:!0,rangelength:[2,20]};u.handleRaceForm=function(t,i){var e={raceName:f},o=n.dataAccess.saveRaceToDb,u=new n.CallbackData(t);u.successMessage="New custom race created.";u.failureMessage="Failed to create the new race.";u.isCustomizePage=i;r(t,o,e,{raceName:{required:"Please enter the race name.",rangelength:"Race name must be between 2 and 20 characters long."}},u)};u.handleClassForm=function(t,i){var o={className:f},u=new n.CallbackData(t),e;u.successMessage="New custom class created.";u.failureMessage="Failed to create the new class.";u.isCustomizePage=i;e=n.dataAccess.saveClassToDb;r(t,e,o,{className:{required:"Please enter the class name.",rangelength:"Class name must be between 2 and 20 characters long."}},u)};u.handleCharacterForm=function(t,i){var f={name:{required:!0,rangelength:[1,50]},raceId:{required:!0,number:!0},classId:{required:!0,number:!0}},e={name:{required:"Your character must have a name.",rangelength:"Your character's name must be between 1 and 50 characters long."},raceId:{required:"Your character must have a race.",number:"Please create a race for your character."},classId:{required:"Your character must have a class.",number:"Please create a class for your character."}},u=new n.CallbackData(t,"eventLog");i?(u.successMessage="New character created.",u.failureMessage="Failed to create the character.",r(t,n.dataAccess.saveCharacterToDb,f,e,u)):(u.successMessage="Character updated.",u.failureMessage="Failed to update the character.",r(t,n.dataAccess.updateCharacterInDb,f,e,u))};u.handleEventForm=function(t,i){var f=function(){return!n.util.isCombatEvent()},e={eventType:{required:!0,number:!0},enemyName:{required:{param:!0,depends:n.util.isCombatEvent},maxlength:{param:30,depends:n.util.isCombatEvent}},creatureCount:{required:{param:!0,depends:n.util.isCombatEvent},number:{param:!0,depends:n.util.isCombatEvent}},eventName:{required:{param:!0,depends:f},maxlength:{param:30,depends:f}},experience:{required:!0,number:!0,min:0},characterCount:{required:!0,number:!0}},o={eventType:{required:"You must select an XP source.",number:"Please select an XP source."},enemyName:{required:"Please enter a name.",maxlength:"Max 30 characters long."},creatureCount:{required:"Required.",number:"Must be a number."},eventName:{required:"Please enter what got you experience.",maxlength:"Max 30 characters long."},experience:{required:"Please enter the total XP amount.",number:"XP amount must be a number.",min:"XP amount must be at least 0."},characterCount:{required:"Please enter how many PCs shared the XP.",number:"This must be a number."}},u=new n.CallbackData(t,"eventLog");i?(u.successMessage="New Event created.",u.failureMessage="Failed to save the new event.",r(t,n.dataAccess.saveEventToDb,e,o,u)):(u.successMessage="Event updated.",u.failureMessage="Failed to update the event.",r(t,n.dataAccess.updateEventInDb,e,o,u))};u.handleOtherEventForm=function(t,i,u){var e={eventName:{required:{param:!0,depends:!n.util.isCombatEvent},maxlength:{param:30,depends:!n.util.isCombatEvent}}},o={eventName:{required:"Please enter what got you experience.",maxlength:"Max 30 characters long."}},f=new n.CallbackData(t,"eventLog");f.isResurrection=i;u?(f.successMessage=i?"You've been resurrected.":"You died.",f.failureMessage="Failed to save "+(i?"resurrection.":"death."),r(t,n.dataAccess.saveOtherEventToDb,e,o,f)):(f.successMessage="Updated "+(i?"resurrection":"death")+" event successfully.",f.failureMessage="Failed to updated "+(i?"resurrection":"death")+" event.",r(t,n.dataAccess.updateOtherEventInDb,e,o,f))}}(window.lifeStory,jQuery);
//# sourceMappingURL=lifeStoryScripts.min.js.map
